extends page

mixin renderPages(pages, root, depth)
    -
        const nonCapitalised = ['and', 'or', 'is', 'but', 'not', 'because', 'of', 'from', 'to', 'in', 'at', 'vs']
        const capitalise = function (i) {
            if (i.endsWith('.md'))
                i = i.slice(0, -3);
            const words = [];
            for (const word of i.split(/[-\s.\/\\]+/g)) {
                if (nonCapitalised.includes(word.toLowerCase()))
                    words.push(word.toLowerCase());
                else
                    words.push(word[0].toUpperCase() + word.slice(1).toLowerCase());
            }
            return words.join(' ');
        }
    for page in Object.keys(pages)
        if (typeof pages[page] === 'string')
            a.page(href="/wiki/" + encodeURIComponent(root + page))= capitalise(page)
        else
            input(type="checkbox", id=`checkbox-for-${page}-${depth}`, checked).collapse
            label(for=`checkbox-for-${page}-${depth}`)
                span= capitalise(page)
                .indent
                    +renderPages(pages[page], '/' + root + page + '/', depth + 1)

block page
    link(rel="stylesheet", href="/app/wiki.css")

    input(type="checkbox", checked)#index.collapse-index
    label(for="index")
        h2 Index
        #pages
            +renderPages(pages, '', 0)

    if (content)
        article#content !{content}
    else
        article#content
